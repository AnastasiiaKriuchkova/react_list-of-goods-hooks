{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortField","goodsFromServer","getSortedGoods","goods","sortField","reversed","sortedGoods","sort","a","b","SORT_ALPHABETICALLY","localeCompare","SORT_BY_LENGTH","length","reverse","App","useState","setReversed","setSortField","visibleGoods","setVisibleGoods","handleSort","field","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQF,SAASC,EACPC,EACAC,EACAC,GAEA,IAAMC,EAAW,YAAOH,GAexB,OAbIC,GACFE,EAAYC,MAAK,SAACC,EAAGC,GACnB,OAAQL,GACN,KAAKJ,EAAUU,oBACb,OAAOF,EAAEG,cAAcF,GACzB,KAAKT,EAAUY,eACb,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAKXR,EACKC,EAAYQ,UAGdR,G,SA7BJN,K,0CAAAA,E,iCAAAA,M,KAgCE,IAAMe,EAAgB,WAC3B,MAAgCC,oBAAS,GAAzC,mBAAOX,EAAP,KAAiBY,EAAjB,KACA,EAAkCD,mBAAS,IAA3C,mBAAOZ,EAAP,KAAkBc,EAAlB,KAEA,EAAwCF,mBACtCd,EAAeD,EAAiBG,EAAWC,IAD7C,mBAAOc,EAAP,KAAqBC,EAArB,KASA,SAASC,EAAWC,GAClBJ,EAAaI,GACbF,EAAgBlB,EAAeD,EAAiBqB,EAAOjB,IASzD,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMH,EAAWrB,EAAUU,sBACpCe,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYtB,IAAcJ,EAAUU,sBAJxC,iCAUA,wBACEc,QAAS,kBAAMH,EAAWrB,EAAUY,iBACpCa,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYtB,IAAcJ,EAAUY,iBAJxC,4BAUA,wBACEY,QAAS,kBAvCfP,GAAaZ,QACbe,EAAgBlB,EAAeD,EAAiBG,GAAYC,KAuCtDoB,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAarB,IAJjB,sBAUED,GAAaC,IACb,wBACEmB,QAzCV,WACEN,EAAa,IACbD,GAAY,GACZG,EAAgBnB,IAuCRwB,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGJ,EAAaQ,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCrHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cf1f120a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortField {\n  SORT_ALPHABETICALLY = 'Sort alphabetically',\n  SORT_BY_LENGTH = 'Sort by length',\n}\n\nfunction getSortedGoods(\n  goods: string[],\n  sortField: string,\n  reversed: boolean,\n) {\n  const sortedGoods = [...goods];\n\n  if (sortField) {\n    sortedGoods.sort((a, b) => {\n      switch (sortField) {\n        case SortField.SORT_ALPHABETICALLY:\n          return a.localeCompare(b);\n        case SortField.SORT_BY_LENGTH:\n          return a.length - b.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    return sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [reversed, setReversed] = useState(false);\n  const [sortField, setSortField] = useState('');\n\n  const [visibleGoods, setVisibleGoods] = useState(\n    getSortedGoods(goodsFromServer, sortField, reversed),\n  );\n\n  function handleReverse() {\n    setReversed(!reversed);\n    setVisibleGoods(getSortedGoods(goodsFromServer, sortField, !reversed));\n  }\n\n  function handleSort(field: string) {\n    setSortField(field);\n    setVisibleGoods(getSortedGoods(goodsFromServer, field, reversed));\n  }\n\n  function handleReset() {\n    setSortField('');\n    setReversed(false);\n    setVisibleGoods(goodsFromServer);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => handleSort(SortField.SORT_ALPHABETICALLY)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SortField.SORT_ALPHABETICALLY,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => handleSort(SortField.SORT_BY_LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SortField.SORT_BY_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => handleReverse()}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !reversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reversed) && (\n          <button\n            onClick={handleReset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}